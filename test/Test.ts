import { ethers } from "hardhat"
import { expect } from "chai";
import { SignerWithAddress } from "@nomiclabs/hardhat-ethers/signers";
// This needs to correspond to whatever we called our token in it's .sol.
// It also needs to point to the correct file generated by compiling.
import { MyERC20Token } from "../typechain-types";





describe("Tests for for MyERC20Token and MyERC721Token", async () => {

    let MyERC20Contract: MyERC20Token;
    let accounts: SignerWithAddress[];


    beforeEach(async () => {
        const accounts = await ethers.getSigners();
        const tokenContractFactory = await ethers.getContractFactory(
            "MyERC20Token"
        );
        // Putting "as MyERC20Token" forces environment to identify type correctly.
        MyERC20Contract = await tokenContractFactory.deploy() as MyERC20Token;
        await MyERC20Contract.deployed();
    });

    it("should have 0 supply at the time of deployment", async () => {
        const totalSupplyBN = await MyERC20Contract.totalSupply();
        const decimals = await MyERC20Contract.decimals();
        const totalSupply = parseFloat(
            ethers.utils.formatUnits(totalSupplyBN, decimals)
        );
        expect(totalSupply).to.eq(0);
    })

    // it("triggers transfer events", async () => {
    //     //TO DO
    // });
})